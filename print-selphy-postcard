#!/bin/sh

# print-selphy-postcard
# 
# Print postcard-sized (148x100mm, 5.8 x 3.9in) images
# on a Canon Selphy CP1200 and compatible photo printers
#
# Usage: print-selphy-postcard [--border] <file>
#
# This script requires ImageMagick, GNU sed and other text processing
# utilities, and CUPS.

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 2 of the License, or
# (at your option) any later version.
#  
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#  
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# Configuration parameters:

# Printer name
# Set Wi-Fi printer name, as seen by CUPS.
#
# Corresponding printer entry in CUPS configuration should be something like:
# dnssd://Canon%20SELPHY%20CP1200._ipp._tcp.local/?uuid=<uuid>
#
# To produce that entry for a new printer, use CUPS printer autodetection
# (usually http://localhost:631 , Administration / Add Printer menu) while
# mDNS service discovery is enabled.
#
PRINTER="Canon_SELPHY_CP1200"

tmpdir="/tmp"
# End of configuration parameters.

help(){
    cat << EOF
Send images to a Canon Selphy printer.

${0##*/} [-b|--border] [-h|--help] [-p|--preview] [-P|--printer NAME] <file>

<file>		The image to print.

Available options:
    -b, --border        Print a white margin around the image.
    -h, --help          Print this help
    -p, --preview       Display a print preview instead of sending to printer.
                        using zenity.
    -P, --printer NAME  Set the Selphy printer name, as seen by CUPS.
                        Defaults to: "${PRINTER}"
EOF
}

zenity_preview(){
#width: 1760px; height: 1190px
    echo "<div id=\"rectangle\" style=\"width: 1872px; height: 1248px;border:solid thick darkblue; border-radius: 1em; \"><img src=\"$1\" /></div>" | \
    zenity --text-info --html \
        --title="PRINT" \
        --width=2000 \
        --height=1300 \
        --filename=/dev/stdin \
        --ok-label "Print" --cancel-label "Cancel"
    return $?
}

checks(){
    check="true"
    for ex in \
        identify convert grep tr head lpq lpr
    do
        loc=`which "${ex}"`
        if [ "${loc}" = "" ];then
            echo "${ex} is missing"
            check="false"
        fi
    done

    if [ "${check}" = "false" ];then
        echo "Some utilities are missing"
        exit 1
    fi

    # check printer
    lpq -P "${PRINTER}" >/dev/null 2>&1 || check="false"
    if [ "${check}" = "false" ];then
        echo "Can't check printer ${PRINTER} status"
        exit 1
    fi
}

# Argument parsing
POSITIONAL=()
while [[ $# > 0 ]]; do # while arguments count > 0
    case "$1" in
        -b|--border)
            border=1
            shift
          ;;
        -h|--help)
            help
            exit 0
          ;;
        -p|--preview)
            preview=1
            shift
          ;;
        -P|--printer)
            PRINTER="$2"
            shift 2 # shift twice to bypass switch and its value
          ;;
        *)    # unknown option
            POSITIONAL+=("$1")
            shift
          ;;
      esac
done
set -- "${POSITIONAL[@]}" # restore positional parameters

if [ $# == 0 ]
  then
    echo "Missing Parameters.\nPlease see command line for help"
    help
    exit 1
fi

if [ ! -f "${1}" ];then
    echo "Input file not found" 1>&2
    exit 1
fi

# checking for required utilities
checks

if [ "${border:-0}" -eq 1 ];then
    imggeom="1700x1130"
else
    imggeom="1760x1190"  # border is 60px = 5 mm
fi

# Check need rotate
if \
    echo $(($(identify "${1}" | tr ' ' '\n' | \
              grep '^[0-9]\+x[0-9]\+$' | \
              head -n 1 | tr 'x' '-'))) | \
    grep -q - 
then
    rotateopt="-rotate"
    rot="90"
else
    rotateopt=""
    rot=""
fi

# Convert image
# Standard Postcard (6”x4”) 1847 x 1247 pixels (300dpi)
convert ${rotateopt} ${rot} -define filter:blur=0.8 \
    -filter Gaussian -resize "${imggeom}" \
    -gravity center -extent "1760x1190" "${1}" png:- | \
convert -page "+46+34" -background white -flatten \
    -extent "1872x1248" png:- -quality 97 jpg:-  \
> ${tmpdir}/printFile

if [ "${preview:-0}" -eq 1 ];then
    if (! zenity_preview "${tmpdir}/printFile");then
        echo "Cancel print"
        exit 0
    fi
fi

lpr -o raw -P "${PRINTER}" "${tmpdir}/printFile"
rm -f "${tmpdir}/printFile"

exit 0
